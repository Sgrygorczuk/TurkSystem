import datetime

class Project():
    
    def __init__(self, id = 0, owner_id = 0, name = "", desciption = "", bidding_start_date = "",  current_date = "", bidding_end_date = "",
                  proejct_status = 0, max_payment_offer = 0, max_time_offer = 0, active_bid_id_list = [], best_bid_id = 0 , project_submit_date = 0,
                  project_sumbited = False, developer_id = 0, owner_grade = 0, owner_collected = False, developer_grade = 0):
        self.id = id
        self.owner_id = owner_id
        self.name = name
        self.desciption = desciption
        self.bidding_start_date = bidding_start_date
        self.current_date = current_date
        self.bidding_end_date = bidding_end_date
        self.max_payment_offer = max_payment_offer
        self.max_time_offer = max_time_offer
        
        #Status 0 = Bidding, 1 = In Progress, 2 = Complete
        self.proejct_status = proejct_status
        
        self.max_payment_offer = max_payment_offer
        self.max_time_offer = max_time_offer
        self.active_bid_id_list = active_bid_id_list
        self.best_bid_id = best_bid_id
        
        self.project_submit_date = project_submit_date
        self.project_sumbited = project_sumbited
        self.developer_id = developer_id 
        self.owner_grade = owner_grade
        self.owner_collected = owner_collected
        self.developer_grade = developer_grade
        
        self.dictonary = {"id" : self.id, "owner_id" : self.owner_id, "name" : self.name, "desciption" : self.desciption, "bidding_start_date" : self.bidding_start_date,
                          "current_date" : self.current_date, "bidding_end_date" : self.bidding_end_date, "proejct_status" : self.proejct_status, "max_payment_offer" : self.max_payment_offer, "max_time_offer" : self.max_time_offer,
                          "active_bid_id_list" : self.active_bid_id_list, "best_bid_id": self.best_bid_id, "project_submit_date" : self.project_submit_date,
                          "project_sumbited" : self.project_sumbited, "developer_id" : self.developer_id, "owner_grade" : self.owner_grade, "owner_collected" : self.owner_collected,
                           "developer_grade" : self.developer_grade}
    
    def get_id(self):
        return self.id
    
    def set_id(self, new_id):
        self.id = new_id
        self.dictonary["id"] = new_id
    
    def get_owener_id(self):
        return self.owner_id
    
    def set_owner_id(self, new_id):
        self.owner_id = new_id
        self.dictonary["owner_id"] = new_id
    
    def get_name(self):
        return self.name
    
    def set_name(self, new_name):
        self.name = new_name
        self.dictonary["name"] = new_name
    
    def get_description(self):
        return self.desciption
    
    def set_description(self, new_des):
        self.desciption = new_des
        self.dictonary["desciption"] = new_des
    
    def get_project_status(self):
        return self.proejct_status
    
    def set_project_status(self):
        if(self.project_sumbited):
            self.proejct_status = 2
        #Need make this into a number 
        elif (self.bidding_end_date == self.current_date_date):
            self.proejct_status = 1
        else:
            self.project_status = 0
    
    def set_bidding_dates(self,date):
        self.bidding_start_date = date.strftime("%m-%d-%Y")
        date.replace(day = date.day + 7)
        self.bidding_end_date = date.strftime("%m-%d-%Y")
    
    def get_bidding_end_date(self):
        return self.bidding_end_date
    
    def get_max_payment(self):
        return self.max_payment_offer
        
    def set_max_payment(self, max_payment):
        self.max_payment_offer = max_payment
    
    def get_max_time(self):
        return self.max_time_offer
        
    def set_max_time(self, max_time):
        self.max_time_offer = max_time
    
    def get_developer_id(self):
        return self.developer_id
    
    def set_developer_id(self, new_id):
        self.developer_id = new_id
        
    def get_owner_grade(self):
        return self.owner_grade
        
    def get_developer_grade(self):
        return self.developer_grade
    def get_dictonary(self):
        return self.dictonary